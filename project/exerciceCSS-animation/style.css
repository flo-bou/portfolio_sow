main{
  display: grid;
  grid-template-columns: 50% 50%;
  grid-gap: 10px;
  padding: 10px;
}

section {
  background-color: beige;
  border-radius: 1rem;
  padding: 1rem;
  min-height: 300px;
}

div{
  width: 70%;
  height: 100px;
  padding: 40px;
  margin: 20px auto;
  border: 2px solid black;
  box-sizing: border-box;
  text-align: center;
  background-color: orange;
}

/* s1 */
#s1 .d1{
  animation-name: couleurs; /* On appelle l'animation nommée plus bas */
  animation-duration: 4s;
  animation-iteration-count: infinite;
}

@keyframes couleurs{
  from{
      background-color: orange;
      /* ici on déclare une valeur qui est déjà la valeur par défaut de l'élément cible afin qu'il n'y ait pas de différences brutale au moment où l'animation se déclenche (par rapport à la valeur par défaut) */
  }
  25%{
      background-color: blue;
      width: 75%
  }
  50%{
      background-color: purple;
      width: 50%
  }
  75%{
      background-color: red;
      width: 75%;
  }
  to{
      background-color: orange;
  }
}

/* s2 */
#s2 .d1{
  animation-name: couleur, essuieglace, taille; /* On appelle plusieurs règles keyframes avec cette animation */
  animation-duration: 10s, 2s;/* Il y a répetition dans l'ordre de déclaration des valeurs de animation-duration en cas de nombre de valeurs inférieur au nombre d'animations. Donc ici cela correspond à 10s 2s 10s */
  animation-iteration-count: infinite;

}
@keyframes couleur{
  from{background-color: orange;}
  50%{background-color: purple;}
  to{background-color: blue;}
}
@keyframes essuieglace{
  from{margin-top: 0px;}
  50%{margin-top: 100px;}
  to{margin-top : 0px;}
}
@keyframes taille{
  from{width: 100%}
  50%{width: 50%;}
  to{width: 100%;}
}

/* s3 */
#s3 .d1{
  animation-name: taille;
  animation-duration: 5s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}
#s3 .d2{
  animation-name: taille;
  animation-duration: 5s;
  animation-timing-function: ease-in;
  animation-iteration-count: infinite;
}
#s3 .d3{
  animation-name: taille;
  animation-duration: 5s;
  animation-timing-function: ease-out;
  animation-iteration-count: infinite;
}
@keyframes taille{
  from{width: 100%;}
  50%{width: 50%;}
  to{width: 100%;}
}

/* s4 */
#s4 .d1, #s4 .d2, #s4 .d3{
  animation-name: taille;
  animation-duration: 3s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}
#s4 .d1{
  animation-direction: reverse;
}
#s4 .d2{
  animation-direction: alternate;
}
#s4 .d3{
  animation-direction: alternate-reverse;
}

/* s5 */
#s5 .d2, #s5 .d3{
  animation-name: taille;
  animation-duration: 3s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}
#s5 .d2:hover{
  animation-play-state: paused;
}
#s5 .d3:active{
  animation-play-state: paused; /* pause lorsque l'user clic (et reste appuyé) sur le le div d3*/
}

/* s6 */
#s6 .d1, #s6 .d2, #s6 .d3{
  animation-name: couleur;
  animation-duration: 5s;
  animation-timing-function: linear;
  animation-delay: 2s;
}
#s6 .d1{
  animation-fill-mode: backwards;/* Ici, avant le début de l'animation la valeur de background-color définie dans @keyframes supplante la valeur par défaut. Après la fin de l'animation, la valeur est celle par défaut */
}
#s6 .d2{
  animation-fill-mode: forwards; /* Ici, avant le début de l'animation la valeur de background-color est celle par défaut. Après la fin de l'animation, la valeur est celle définie dans @keyframes */
}
#s6 .d3{
  animation-fill-mode: both;/* Ici, avant le début de l'animation la valeur de background-color définie dans @keyframes supplante la valeur par défaut Après la fin de l'animation, la valeur est celle définie dans @keyframes */
}